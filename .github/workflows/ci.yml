name: CI

on:
    push:
    pull_request:
        branches:
            - master

env:
    CI: true
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    check-spell:
        name: Check spelling
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: marshallku/actions/analyze/spell@master
    check-format:
        name: Check format of code
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: "22"
                  check-latest: true
                  registry-url: https://registry.npmjs.org/
            - name: Check format
              run: npx prettier . --check
    build:
        name: Build project
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions-rust-lang/setup-rust-toolchain@v1
            - run: cargo build
    test:
        name: Test project
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions-rust-lang/setup-rust-toolchain@v1
            - run: cargo test
    sonarqube:
        name: Analyze with SonarQube
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/master'
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - uses: actions-rust-lang/setup-rust-toolchain@v1
            - name: Install Clippy
              run: rustup component add clippy
            - name: Generate Clippy report
              run: cargo clippy --message-format=json &> clippy-report.json || true
            - name: Install tarpaulin
              run: cargo install cargo-tarpaulin
            - name: Measure coverage with tarpaulin
              run: RUN_MODE=local cargo tarpaulin --ignore-tests --all-features --release --out Xml --timeout 300
            - uses: sonarsource/sonarqube-scan-action@v2
              env:
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    send-notification:
        needs: [check-spell, check-format, build, test, sonarqube]
        if: ${{ failure() }}
        uses: marshallku/actions/.github/workflows/send-notification.yml@master
        with:
            failed: ${{ contains(join(needs.*.result, ','), 'failure') }}
            message: "CI job failed"
        secrets:
            url: ${{ secrets.DISCORD_WEBHOOK_URI }}
